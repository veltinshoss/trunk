package monkeypuzzle.entity.sqlite;

import java.util.List;

import monkeypuzzle.io.parser.sqlite.dynamicproxy.SqlField;
import monkeypuzzle.io.parser.sqlite.dynamicproxy.SqlTable;
import monkeypuzzle.io.util.IphoneDate;

/** Autogenerated from Library/Calendar/Calendar.sqlitedb */
public interface TimeBasedInformation extends List<TimeBasedInformation.Event>
{

	@SqlTable(tableName = "ALARM")
	public interface Alarm
	{
		@SqlField("entity_id")
		public int getEntityId();

		@SqlField("entity_type")
		public int getEntityType();

		@SqlField("ROWID")
		public int getRowId();

		@SqlField("trigger_date")
		public IphoneDate getTriggerDate();

		@SqlField("trigger_interval")
		public int getTriggerInterval();

		@SqlField("type")
		public int getType();
	}

	@SqlTable(tableName = "ALARMCHANGES")
	public interface AlarmChanges
	{
		@SqlField("record")
		public int getRecord();

		@SqlField("type")
		public int getType();
	}

	@SqlTable(tableName = "CALENDAR")
	public interface Calendar
	{
		@SqlField("read_only")
		public int getReadOnly();

		@SqlField("ROWID")
		public int getRowId();

		@SqlField("title")
		public String getTitle();
	}

	@SqlTable(tableName = "CALENDARCHANGES")
	public interface CalendarChanges
	{
		@SqlField("record")
		public int getRecord();

		@SqlField("type")
		public int getType();
	}

	@SqlTable(tableName = "EVENT")
	public interface Event
	{
		@SqlField("all_day")
		public int getAllDay();

		@SqlField("calendar_id")
		public int getCalendarId();

		@SqlField("description")
		public String getDescription();

		@SqlField("end_date")
		public IphoneDate getEndDate();

		@SqlField("location")
		public String getLocation();

		@SqlField("orig_event_id")
		public int getOrigEventId();

		@SqlField("orig_start_date")
		public int getOrigStartDate();

		@SqlField("ROWID")
		public int getRowId();

		@SqlField("start_date")
		public IphoneDate getStartDate();

		@SqlField("start_tz")
		public String getStartTz();

		@SqlField("summary")
		public String getSummary();
	}

	@SqlTable(tableName = "EVENTCHANGES")
	public interface EventChanges
	{
		@SqlField("record")
		public int getRecord();

		@SqlField("type")
		public int getType();
	}

	@SqlTable(tableName = "EVENTEXCEPTIONDATE")
	public interface EventExceptionDate
	{
		@SqlField("date")
		public int getDate();

		@SqlField("event_id")
		public int getEventId();
	}

	@SqlTable(tableName = "OCCURRENCECACHE")
	public interface OccuranceCache
	{
		@SqlField("day")
		public int getDay();

		@SqlField("event_id")
		public int getEventId();

		@SqlField("occurrence_date")
		public IphoneDate getOccurrenceDate();

		@SqlField("occurrence_start_date")
		public IphoneDate getOccurrenceStartDate();
	}

	@SqlTable(tableName = "OCCURRENCECACHEDAYS")
	public interface OccuranceCacheDays
	{
		@SqlField("count")
		public int getCount();

		@SqlField("day")
		public int getDay();
	}

	@SqlTable(tableName = "RECURRENCECHANGES")
	public interface ReccuranceChanges
	{
		@SqlField("record")
		public int getRecord();

		@SqlField("type")
		public int getType();
	}

	@SqlTable(tableName = "RECURRENCE")
	public interface Recurrance
	{
		@SqlField("by_month_months")
		public int getByMonthMonths();

		@SqlField("cached_end_date")
		public IphoneDate getCachedEndDate();

		@SqlField("cached_end_date_tz")
		public String getCachedEndDateTz();

		@SqlField("count")
		public int getCount();

		@SqlField("end_date")
		public int getEndDate();

		@SqlField("event_id")
		public int getEventId();

		@SqlField("frequency")
		public int getFrequency();

		@SqlField("interval")
		public int getInterval();

		@SqlField("ROWID")
		public int getRowId();

		@SqlField("specifier")
		public String getSpecifier();

		@SqlField("week_start")
		public int getWeekStart();
	}

	@SqlTable(tableName = "TASK")
	public interface Task
	{
		@SqlField("calendar_id")
		public int getCalendarId();

		@SqlField("completion_date")
		public IphoneDate getCompletionDate();

		@SqlField("due_date")
		public IphoneDate getDueDate();

		@SqlField("priority")
		public int getPriority();

		@SqlField("ROWID")
		public int getRowId();

		@SqlField("summary")
		public String getSummary();
	}

	@SqlTable(tableName = "TASKCHANGES")
	public interface TaskChanges
	{
		@SqlField("record")
		public int getRecord();

		@SqlField("type")
		public int getType();
	}
}